- private Map<String, String> dictionary = Collections.emptyMap(); to avoid special cases

- static factory method?

- BufferedReader vs apache common io due to new carriages

- wrap output text

- punctuations

- check TODOs

-linkedhashmap, tree map? (time vs speed)

- quotations (uses open quote flag)

- change nulls to exceptions

-clean before zipping

-write about file read in methods. The file size are for texts are typically small converting the line read in to bytes would be negligible for the memory saved

- trim?

- first phrase of text can be any combination of two words.

-mvn clean compile assembly:single

-end with user line input

-paragraphs (random every 2-7 sentences)

-capitalizations of “I”

- add logging

- check memory leaks

- documentation

-remove hardcode nums

- explain that quotations sentences start with capital. So capitalizing quotes when the first random key selected start with quote won’t have negative effects.  Also because it is a quote, the first character is most cases uppercase

- punctuations in the middle of the two adjacent words to start the output text

-unit test private methods

-last key is a list instead of linked list because of memory and access times

-if first text starts with quote, it doesn’t matter if the first word is capitalized or not.

-special cases emphasize periods. generally wanna leave one word questions or exclamations alone